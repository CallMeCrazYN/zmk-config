/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <locale/keys_de.h>
#include "keys_de.h"

#define QWERTY 0
#define QWERTY_LWR 1
#define QWERTY_RAISE 2
#define KOY_BASE 3
#define KOY_BASE_SYMBOL 4
#define KOY_NUM 5


//- brauche super key noch irgendwo -> gui 


// &sk for sticky keys
// stays pressed until another is released

&sk {

  release-after-ms = <1000>;
  quick-release;
  /delete-property/ ignore-modifiers;

};

&sl {
    release-after-ms = <2000>;
};


// maybe use tapdance to handle layers
//- one tap for nextkeypress and then go back
// 2 and hold for toggle layer
// 

/ {

      behaviors {
          tdshift: tap_dance_0 {
              compatible = "zmk,behavior-tap-dance";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&sk LSHIFT>, <&kp CAPS>;
          };
          tdkoynum: tap_dance_1 {
              compatible = "zmk,behavior-tap-dance";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&sl KOY_NUM>, <&tog KOY_NUM>;
          };
          tdkoysym: tap_dance_2 {
              compatible = "zmk,behavior-tap-dance";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&sl KOY_BASE_SYMBOL>, <&tog KOY_BASE_SYMBOL>;
          };

      };

      keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//               | GUI | KOY_Sym | SPC |   | ENT | KOY_NUM  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &to KOY_BASE &mo KOY_BASE_SYMBOL &kp SPACE   &kp RET &mo KOY_NUM &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &to QWERTY      &kp SPACE      &kp RET  &to QWERTY   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };


                koy_base_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  k  |  .  |  o  |  ,  |  y  |   |  v  |  g  |  c  |  l  |  ß das hier auf extra layer?  | z oder BSPC? |
// | CTRL?|  h   |  a  |  e  |  i  |  u   |   |  d  |  t  |  r  |  n  |  s  |  f   |
// | SHFT |  x  |  q   |  ä   |  ü   |   |  ö  |  b  |  p  |  w  | m |  j   |
//  layer  somewhere
//                    | GUI | LWR | SPC |   | ENT | RSE | ALT |

                        bindings = <
   &kp  TAB  &kp DE_K  &kp DE_DOT  &kp DE_O &kp DE_COMMA &kp DE_Y &kp DE_V &kp DE_G &kp DE_C &kp DE_L &kp DE_Z &kp BSPC
   &kp LCTRL &kp DE_H  &kp DE_A    &kp DE_E &kp DE_I     &kp DE_U &kp DE_D &kp DE_T &kp DE_R &kp DE_N &kp DE_S &kp DE_F
   &tdshift &trans &kp DE_X    &kp DE_Q &kp DE_A_UMLAUT &kp DE_U_UMLAUT &kp DE_B &kp DE_P &kp DE_W &kp DE_M &kp DE_J &kp RSHFT 
             &kp LGUI &tdkoysym &kp DE_SPACE   &kp RET   &tdkoynum   &kp ALT
                        >;
                };


                koy_first_symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  ... /replace? |  _  |  [  |  ]  |  ^  |    |  !  |  <  |  >  |  =  |  &  | ſ replace? (ß maybe) |
// | CTRL |  \  |  /  |  {  |  }  |  *  |               |  ?  |  (   |  )  |  -  |  :  |  @   |
// | hold-tap SHFT |  #  |  $  |  "|"  |  ~  |  `  |    |  +  |  %  |  "  |  '  |  ; |  stuff  |
//           what to do here?| GUI | LWR | SPC |   | ENT | RSE  | ALT |

                        bindings = <
   &kp TAB   &trans &kp DE_UNDERSCORE &kp DE_LEFT_BRACKET &kp DE_RIGHT_BRACKET &kp DE_CARET &kp DE_EXCLAMATION &kp DE_LT  &kp DE_GT    &kp DE_EQUAL   &kp DE_AMPERSAND &trans  
   &kp LCTRL &kp DE_BACKSLASH &kp DE_SLASH &kp DE_LEFT_BRACE &kp DE_RIGHT_BRACE &kp DE_ASTERISK &kp DE_QUESTION &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS &kp DE_MINUS &kp DE_COLON &kp DE_AT
   &tdshift &kp DE_HASH &kp DE_DOLLAR &kp DE_PIPE &kp DE_TILDE &kp DE_GRAVE &kp DE_PLUS &kp DE_PERCENT &kp DE_DOUBLE_QUOTES &kp DE_DOT &kp DE_SEMICOLON &kp ESC
                  &kp LGUI &trans &kp DE_SPACE   &kp RET &trans &kp ALT
                        >;
                };

                koy_num_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  k  |  .  |  o  |  ,  |  y  |   |  v  |  g  |  c  |  l  |  ß das hier auf extra layer?  | z oder BSPC? |
// | CTRL?|  h   |  a  |  e  |  i  |  u   |   |  d  |  t  |  r  |  n  |  s  |  f   |
// | SHFT |  x  |  q   |  ä   |  ü   |   |  ö  |  b  |  p  |  w  | m |  j   |
//  layer  somewhere
//                    | GUI | LWR | SPC |   | ENT | RSE | ALT |

                        bindings = <
   &kp  TAB  &kp PAGE_UP  &kp BSPC  &kp UP_ARROW  &kp DELETE &kp PAGE_DOWN  &trans &kp DE_N7 &kp DE_N8 &kp DE_N9 &kp DE_PLUS &kp DE_MINUS 
   &kp LCTRL &kp HOME  &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp END &trans &kp DE_N4 &kp DE_N5 &kp DE_N6 &kp DE_COMMA &kp DE_DOT 
   &tdshift &kp ESC &kp TAB &trans &kp RET &trans &kp DE_COLON &kp DE_N1 &kp DE_N2 &kp DE_N3 &kp DE_SEMICOLON &kp RSHFT 
             &kp LCTRL &trans  &kp DE_SPACE   &kp RET   &trans   &kp ALT
                        >;
                };
        };
};

